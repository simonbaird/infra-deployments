---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: ci-builds
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi

---
apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  annotations:
    tekton.dev/displayName: s2i nodejs
    tekton.dev/pipelines.minVersion: "0.19"
    tekton.dev/tags: s2i, nodejs, workspace
  labels:
    app.kubernetes.io/version: "0.1"
    operator.tekton.dev/provider-type: redhat
  name: s2i-nodejs-chains
spec:
  description: s2i-nodejs task clones a Git repository and builds and pushes a container
    image using S2I and a nodejs builder image.
  params:
  - default: 14-ubi8
    description: The tag of nodejs imagestream for nodejs version
    name: VERSION
    type: string
  - default: .
    description: The location of the path to run s2i from.
    name: PATH_CONTEXT
    type: string
  - default: "true"
    description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS
      registry)
    name: TLSVERIFY
    type: string
  - description: Location of the repo where image has to be pushed
    name: IMAGE
    type: string
  - description: Push secret name
    name: PUSH_SECRET_NAME
    type: string
  - default: registry.redhat.io/rhel8/buildah@sha256:e19cf23d5f1e0608f5a897f0a50448beb9f8387031cca49c7487ec71bd91c4d3
    description: The location of the buildah builder image.
    name: BUILDER_IMAGE
    type: string
  - description: Git CHAINS URL
    name: CHAINS-GIT_URL
    type: string
  - description: Git CHAINS Commit
    name: CHAINS-GIT_COMMIT
    type: string
  results:
  - description: Digest of the image just built.
    name: IMAGE_DIGEST
  - description: URL of the image just built.
    name: IMAGE_URL
  steps:
  - command:
    - s2i
    - build
    - $(params.PATH_CONTEXT)
    - image-registry.openshift-image-registry.svc:5000/openshift/nodejs:$(params.VERSION)
    - --as-dockerfile
    - /gen-source/Dockerfile.gen
    env:
    - name: HOME
      value: /tekton/home
    image: registry.redhat.io/ocp-tools-4-tech-preview/source-to-image-rhel8@sha256:e518e05a730ae066e371a4bd36a5af9cedc8686fd04bd59648d20ea0a486d7e5
    name: generate
    resources: {}
    volumeMounts:
    - mountPath: /gen-source
      name: gen-source
    workingDir: $(workspaces.source.path)
  - command:
    - buildah
    - bud
    - --storage-driver=vfs
    - --tls-verify=$(params.TLSVERIFY)
    - --layers
    - -f
    - /gen-source/Dockerfile.gen
    - -t
    - $(params.IMAGE)
    - .
    image: $(params.BUILDER_IMAGE)
    name: build
    resources: {}
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    - mountPath: /gen-source
      name: gen-source
    workingDir: /gen-source
  - command:
    - buildah
    - push
    - --storage-driver=vfs
    - --tls-verify=$(params.TLSVERIFY)
    - --digestfile=$(workspaces.source.path)/image-digest
    - $(params.IMAGE)
    - docker://$(params.IMAGE)
    image: $(params.BUILDER_IMAGE)
    env:
      - name: REGISTRY_AUTH_FILE
        value: /etc/quay-secret/config.json
    name: push
    resources: {}
    volumeMounts:
    - mountPath: /var/lib/containers
      name: varlibcontainers
    - name: quay-secret
      mountPath: /etc/quay-secret
    workingDir: $(workspaces.source.path)
  - image: $(params.BUILDER_IMAGE)
    name: digest-to-results
    resources: {}
    script: cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST
  - name: write-url
    image: bash
    script: echo "$(params.IMAGE)" | tee /tekton/results/IMAGE_URL
  - name: write-git-commit
    image: bash
    script: echo $(params.CHAINS-GIT_COMMIT) | tee /tekton/results/CHAINS-GIT_COMMIT
  - name: write-git-url
    image: bash
    script: echo $(params.CHAINS-GIT_URL) | tee /tekton/results/CHAINS-GIT_URL
  volumes:
  - emptyDir: {}
    name: varlibcontainers
  - emptyDir: {}
    name: gen-source
  - name: quay-secret
    secret:
      secretName: "$(params.PUSH_SECRET_NAME)"
      items:
      - key: .dockerconfigjson
        path: config.json
  workspaces:
  - mountPath: /workspace/source
    name: source

---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: chains-demo-pipeline
spec:
  params:
  - name: IMAGE
    type: string
    description: 'Image path on registry'
  - name: PUSH_SECRET_NAME
    type: string
    description: 'Registry secret name for push'
  workspaces:
  - name: source
  tasks:
  - name: git-clone
    params:
    - name: url
      value: 'https://github.com/caugello/single-nodejs-app'
    - name: deleteExisting
      value: 'true'
    - name: verbose
      value: 'true'
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
      - name: output
        workspace: source
  - name: build
    taskRef:
      kind: ClusterTask
      name: s2i-nodejs-chains
    params:
    - name: IMAGE
      value: "$(params.IMAGE)"
    - name: PUSH_SECRET_NAME
      value: "$(params.PUSH_SECRET_NAME)"
    - name: TLSVERIFY
      value: 'true'
    - name: CHAINS-GIT_COMMIT
      value: "$(tasks.git-clone.results.commit)"
    - name: CHAINS-GIT_URL
      value: "$(tasks.git-clone.results.url)"
    workspaces:
    - name: source
      workspace: source
    runAfter:
    - git-clone
