apiVersion: v1
kind: Secret
metadata:
  name: chains-ca-cert
  namespace: tekton-chains
type: Opaque
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: chains-secrets-admin
  namespace: tekton-chains
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: chains-secret-admin
  namespace: tekton-chains
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: chains-secret-admin
  namespace: tekton-chains
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: chains-secret-admin
subjects:
- kind: ServiceAccount
  name: chains-secrets-admin
  namespace: tekton-chains
---
apiVersion: batch/v1
kind: Job
metadata:
  name: chains-certs-configuration
  namespace: tekton-chains
  annotations:
    argocd.argoproj.io/hook: Sync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
        - image: registry.redhat.io/openshift4/ose-cli:v4.9
          command:
            - /bin/bash
            - -c
            - |
              echo "Waiting for secret and configmaps to be present"
              until oc get secret chains-ca-cert -n tekton-chains &&\
                oc get cm config-trusted-cabundle -n tekton-chains &&\
                oc get cm kube-root-ca.crt -n tekton-chains
              do
                sleep 5;
              done

              echo "Update certificate"
              TRUSTED_CA=$(mktemp)
              KUBE_CA=$(mktemp)
              oc get cm config-trusted-cabundle -n tekton-chains -o jsonpath="{.data.ca-bundle\.crt}" > $TRUSTED_CA
              oc get cm kube-root-ca.crt -n tekton-chains -o jsonpath="{.data.ca\.crt}" > $KUBE_CA
              cat $TRUSTED_CA $KUBE_CA > /tmp/ca-certificates.crt
              oc create secret generic chains-ca-cert --from-file=/tmp/ca-certificates.crt --dry-run=client -o yaml -n tekton-chains | oc replace -f -
          imagePullPolicy: Always
          name: patch-chains-certs
      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 30
      serviceAccount: chains-secrets-admin
      serviceAccountName: chains-secrets-admin
